// ---- 封装的css样式，调用即可，勿删（调用demo：@include cssFn(argumets);）
$ac:#bcd130;
$c0:#000;
$c3:#333;
$c6:#666;
$c9:#999;
//----------------------------------------------
// 模块专用： 命名 + 属性 -- 注意@变量命名；实际调用 不用@，默认已配置区分前缀 @cl#{$key}

// 不能存在  @bgcolor  @bgcolorcur （×） 前面字段重合名称的形式；
// 正确用法，把状态区分前置  @bgcolor  @curbgcolor （√）
// model.HeadOrFoot = 1 (header)  model.HeadOrFoot = 0 (content) model.HeadOrFoot = -1 (footer)

@mixin cl($name,$key,$color){
    color: $color;
   /* {"title": "#{$name}","type":"color","name": "@cl#{$key}","value": "#{$color}"}*/
}
@mixin clrgba($name,$key,$color){
    color: $color;
   /* {"title": "#{$name}","type":"rgbcolor","name": "@clrgb#{$key}","value": "#{$color}"}*/
}

@mixin bgc($name,$key,$color){
    background-color: $color;
    /* {"title": "#{$name}","type":"color","name": "@bgc#{$key}","value": "#{$color}"}*/
}
@mixin bgcrgba($name,$key,$color){
    background-color: $color;
    /* {"title": "#{$name}","type":"rgbcolor","name": "@bgrgb#{$key}","value": "#{$color}"}*/
}

@mixin bgimg($name,$key,$path){
    background-image:url($path); 
    /* {"title": "#{$name}","type":"image","name": "@img#{$key}","value": "url(#{$path})"}*/
}

// 需要短横线 ‘-’，  rgbcolor 和  color 有区别？   // @include bod('手机边框','@main',#ff660,'-bottom')

@mixin bod($name,$key,$color,$derection:''){
	border#{$derection}-color:$color;
	/* {"title": "#{$name}","type":"color","name": "@bd#{$key}","value": "#{$color}"}*/
}
@mixin bodrgba($name,$key,$color,$derection:''){
	border#{$derection}-color:$color;
	/* {"title": "#{$name}","type":"rgbcolor","name": "@bdrgb#{$key}","value": "#{$color}"}*/
}

// 关于 border，可以组合应用，应减少拆分; 默认值后置，可以减少不必要重写

@mixin bod($name,$key,$color,$width:'1px',$type:'solid',$derection:''){
	border#{$derection}:$width $type $color;
	/* {"title": "#{$name}","type":"color","name": "@bd#{$key}","value": "#{$color}"}*/
}
@mixin bod($name,$key,$color,$width:'1px',$type:'solid',$derection:''){
	border#{$derection}:$width $type $color;
	/* {"title": "#{$name}","type":"rgbcolor","name": "@bdrgb#{$key}","value": "#{$color}"}*/
}


// 不能使用函数 返回注释
// @function color($name,$key,$color) {  
//     @return $color ; /* {"title": "#{$name}","type":"color","name": "@#{$key}","value": "#{$color}"}*/
// }

//------------------------------------------------ 混合： @include
// 前缀   -- gulp中已经配置  
@mixin css3($property, $value) {  
    @each $prefix in -webkit-,  
    -moz-,  
    -ms-,  
    -o-,  
    '' {  
        #{$prefix}#{$property}: $value;  
    }  
}  
// 各种居中	----------  注意（定位方式，层级）
@mixin center ($position:absolute,$zIndex:3){
	position:$position;
	z-index:$zIndex;
	left:50%;
	top:50%;
	transform:translate(-50%,-50%);
}
@mixin xcenter ($position:absolute,$zIndex:3){
	position:$position;
	z-index:$zIndex;
	left:50%;
	transform:translateX(-50%);
}
@mixin ycenter ($position:absolute,$zIndex:3){
	position:$position;
	z-index:$zIndex;
	top:50%;
	transform:translateY(-50%);
}
// ----------------------常用的放大效果
@mixin imgscale (){
	&:hover{
		img{
			-webkit-transform:scale(1.03,1.03);
			-moz-transform:scale(1.03,1.03);
			-ms-transform:scale(1.03,1.03);
			-o-transform:scale(1.03,1.03);
			transform:scale(1.03,1.03);
		}
	}
}
@mixin scalebox (){
	overflow:hidden;
	img{
		-webkit-transition:all ease 0.7s; // Safari 和 Chrome
		-moz-transition: all ease 0.7s;	// FF
		-ms-transition: all ease 0.7s;//IE
		-o-transition:all ease 0.7s;// Opera 
		transition: all ease 0.7s;
	}
}
// ie--- 3d 翻转 兼容 //  backface-visibility  白屏兼容
@mixin ieroll(){
    backface-visibility: hidden;
    transition:all ease 0s\9;
	transition: .7s;
}

// ---------透明度
@mixin opacity($opacity) {  
    opacity: $opacity;  
    $opacity-ie: $opacity * 100;  
    filter: alpha(opacity=$opacity-ie); //IE8  
}  

// 转inline-block
@mixin dib() {
    display: inline-block;
    vertical-align: top;
    *display: inline;
    *zoom: 1;
}

// 单行文本省略  -- 单行文本优先使用，无兼容问题；
@mixin ol($lh) {
    height: $lh;
    line-height: $lh;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

// 图片模糊处理；只是更改了边缘的计算方式，差异太大还是使用dpr倍图

// 小图
@mixin clearimg1() {
	image-rendering: -moz-crisp-edges; /* Firefox /
	image-rendering: -o-crisp-edges; / Opera /
	image-rendering: -webkit-optimize-contrast;/ Webkit (non-standard naming) /
	image-rendering: crisp-edges;
	-ms-interpolation-mode: nearest-neighbor; / IE (non-standard property) */
}
// 大图
@mixin clearimg2(){
	-ms-interpolation-mode: nearest-neighbor;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: -moz-crisp-edges;
    image-rendering: pixelated;
}

// 多行文本省略 -- 注意： display: -webkit-box;的兼容 a，span，等行内元素，需要先 display:block/inline-block
// -- 推荐左右图文，单列，max-height只是兼容辅助
@mixin mlmax($lh, $line) {
    max-height: $lh*$line;
    line-height: $lh;
    display: -webkit-box;
   // word-break: break-all; 英文版的多行文本异常，去掉
    text-overflow: ellipsis;
    overflow: hidden;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
}
// -- 推荐等高列表使用，依靠高度实现布局的
@mixin ml($lh, $line) {
    height: $lh*$line;
    line-height: $lh;
    display: -webkit-box;
    // word-break: break-all; 英文版的多行文本异常，去掉
    text-overflow: ellipsis;
    overflow: hidden;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
}

// placeholder 
@mixin ph($color: #999) {
    // 使用webkit内核的浏览器
    &::-webkit-input-placeholder {
        color: $color;
    } // Firefox版本4-18
    &:-moz-placeholder {
        color: $color;
    } // Firefox版本19+
    &::-moz-placeholder {
        color: $color;
    } // IE浏览器
    &:-ms-input-placeholder {
        color: $color;
    }
}
// 文本不选中 (文字按钮或指定文本)
@mixin noselect (){
	-webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

//------------------- // 三角箭头
// -- 正三角通用属性
%triangleBase {  
    _font-size: 0;  
    _line-height: 0;  
    _overflow: hidden;  
    width: 0;  
    height: 0;  
      
} 
// --正三角正文
@mixin san($derection:bottom, $color: #000, $width: 20px) {  // 默认值： 向下，黑色，20px
    @extend %triangleBase;  
    border-width: $width;  
    //向右  
    @if $derection==right {  
        border-style: dashed dashed dashed solid;  
        border-color: transparent transparent transparent $color;  
    }  
    //向左  
    @if $derection==left {  
        border-style: dashed solid dashed dashed;  
        border-color: transparent $color transparent transparent;  
    }  
    //向上  
    @if $derection==top {  
        border-style: dashed dashed solid dashed;  
        border-color: transparent transparent $color transparent;  
    }  
    //向下  
    @if $derection==bottom {  
        border-style: solid dashed dashed dashed;  
        border-color: $color transparent transparent transparent;  
    }  
} 

//-------------------------------------------------- 函数使用： color:white(0.9);}  
// 黑 black
@function bk($opacity) {  
    @return rgba(0, 0, 0, $opacity)  
}  
// 白 white
@function wt($opacity) {  
    @return rgba(255, 255, 255, $opacity)  
}  